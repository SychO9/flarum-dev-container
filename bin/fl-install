#!/bin/bash

echo "Installing Flarum..."

# Trap errors
trap 'echo "An error occurred. Exiting..." && rollback && exit 1' ERR

# Prepare installation inputs
cat <<EOF > install.yml
debug: true
baseUrl: ${APP_URL}
databaseConfiguration:
  driver: ${DB_DRIVER}
  host: ${DB_HOST}
  port: ${DB_PORT}
  database: ${DB_DATABASE}
  username: ${DB_USERNAME}
  password: ${DB_PASSWORD}
adminUser:
  username: ${ADMIN_USERNAME}
  email: ${ADMIN_EMAIL}
  password: ${ADMIN_PASSWORD}
settings:
  forum_title: ${APP_NAME}
  mail_driver: ${MAIL_DRIVER}
EOF

# Setup the workbench
studio load "../workbench/*"

# Setup the local framework development repository if there is a composer.json file inside framework
if [ -d "../framework" && -f "../framework/composer.json" ]; then
    # then load it
    studio load "../framework/framework/*"
    studio load "../framework/extensions/*"
    studio load "../framework/php-packages/*"
fi

# Set minimum-stability to dev
composer config minimum-stability dev

# Set prefer-stable to true
composer config prefer-stable true

# Download dependencies
composer install --optimize-autoloader --no-interaction --no-progress

# Install
php flarum install -f install.yml

# Cleanup
rm install.yml

# Replace config.php with .config.php to always use the environment variables
cp .config.php config.php

# Undo trap
trap - ERR

echo "Flarum installed successfully!"

# A function to revert all changes made by this script
function rollback() {
  # Move the config.php back
  mv config.php .config.php

  # Undo composer install
  rm -rf vendor
  rm composer.lock

  # Undo the workbench
  studio unload "../workbench/*"

  # Undo the framework
  if [ -d "../framework" ]; then
    studio unload "../framework/framework/*"
    studio unload "../framework/extensions/*"
    studio unload "../framework/php-packages/*"
  fi
}
